<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zjnu.newrailway.project.system.mapper.ContractMapper">

    <resultMap type="Contract" id="ContractResult">
        <result property="id"    column="id"    />
        <result property="contractNumber"    column="contract_number"    />
        <result property="contractName"    column="contract_name"    />
        <result property="margin"    column="margin"    />
        <result property="firstValue"    column="first_value"    />
        <result property="payment"    column="payment"    />
        <result property="department"    column="department"    />
        <result property="agent"    column="agent"    />
        <result property="secondValue"    column="second_value"    />
        <result property="thirdValue"    column="third_value"    />
        <result property="forthValue"    column="forth_value"    />
        <result property="fifthValue"    column="fifth_value"    />
        <result property="file"    column="file"    />
        <result property="beginTime"    column="begin_time"    />
        <result property="terminationRemark"    column="termination_remark"    />
        <result property="paymentRemark"    column="payment_remark"    />
        <result property="lawRemark"    column="law_remark"    />
        <result property="remark"    column="remark"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="status"    column="status"    />
        <result property="rentId"    column="rent_id"    />
        <association property="rent"    column="rent_id" javaType="Rent" resultMap="rentResult"/>
    </resultMap>

    <resultMap type="TestContract" id="TestContractResult">
        <result property="id"    column="id"    />
        <result property="contractNumber"    column="contract_number"    />
        <result property="contractName"    column="contract_name"    />
        <result property="margin"    column="margin"    />
        <result property="firstValue"    column="first_value"    />
        <result property="payment"    column="payment"    />
        <result property="department"    column="department"    />
        <result property="agent"    column="agent"    />
        <result property="secondValue"    column="second_value"    />
        <result property="thirdValue"    column="third_value"    />
        <result property="forthValue"    column="forth_value"    />
        <result property="fifthValue"    column="fifth_value"    />
        <result property="file"    column="file"    />
        <result property="beginTime"    column="begin_time"    />
        <result property="terminationRemark"    column="termination_remark"    />
        <result property="paymentRemark"    column="payment_remark"    />
        <result property="lawRemark"    column="law_remark"    />
        <result property="remark"    column="remark"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="status"    column="status"    />
        <result property="rentId"    column="rent_id"    />
        <association property="rent"    column="rent_id" javaType="Rent" resultMap="rentResult"/>
    </resultMap>

    <resultMap id="rentResult" type="Rent">
        <id     property="rentId"   column="rent_id"     />
        <result property="rentName" column="rent_name"   />
    </resultMap>
    <sql id="selectContractVo">
        select c.id, c.contract_number, c.contract_name,c.rent_id, c.margin, c.first_value, c.payment, c.department, c.agent, c.second_value, c.third_value, c.forth_value, c.fifth_value, c.file, c.begin_time, c.termination_remark, c.payment_remark, c.law_remark, c.remark, c.create_time, c.update_time, c.status,r.rent_id,r.rent_name from sys_contract c
        left join sys_rent r on c.rent_id = r.rent_id
    </sql>

    <select id="selectContractList" parameterType="Contract" resultMap="ContractResult">
        <include refid="selectContractVo"/>
        where status = 1
        <if test="contractName != null and contractName != ''">
            AND contract_name like concat('%', #{contractName}, '%')
        </if>
    </select>

    <select id="selectContractById" parameterType="Integer" resultMap="ContractResult">
        <include refid="selectContractVo"/>
        where id = #{id}
    </select>

    <select id="selectPContractList" parameterType="Contract" resultMap="ContractResult">
        <include refid="selectContractVo"/>
        where status = 0
        <if test="contractName != null and contractName != ''">
            AND contract_name like concat('%', #{contractName}, '%')
        </if>
    </select>

    <select id="checkContractName" parameterType="String" resultMap="ContractResult">
    SELECT * FROM sys_contract
    WHERE contract_name= #{contractName}
</select>
    <select id="checkContractNumber" parameterType="integer" resultMap="ContractResult">
    SELECT * FROM sys_contract
    WHERE contract_number= #{contractNumber}
</select>

    <select id="selectTestContractList" parameterType="Contract" resultMap="TestContractResult">
        <include refid="selectContractVo"/>
        where status = 1
        <if test="contractName != null and contractName != ''">
            AND contract_name like concat('%', #{contractName}, '%')
        </if>
    </select>

    <select id="selectTestPContractList" parameterType="Contract" resultMap="TestContractResult">
        <include refid="selectContractVo"/>
        where status = 0
        <if test="contractName != null and contractName != ''">
            AND contract_name like concat('%', #{contractName}, '%')
        </if>
    </select>


    <insert id="insertContract" parameterType="TestContract">
        insert into sys_contract
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null and id != '' ">id,</if>
            <if test="contractNumber != null and contractNumber != '' ">contract_number,</if>
            <if test="contractName != null and contractName != '' ">contract_name,</if>
            <if test="margin != null and margin != '' ">margin,</if>
            <if test="firstValue != null and firstValue != '' ">first_value,</if>
            <if test="payment != null and payment != '' ">payment,</if>
            <if test="department != null and department != '' ">department,</if>
            <if test="agent != null and agent != '' ">agent,</if>
            <if test="secondValue != null and secondValue != '' ">second_value,</if>
            <if test="thirdValue != null and thirdValue != '' ">third_value,</if>
            <if test="forthValue != null and forthValue != '' ">forth_value,</if>
            <if test="fifthValue != null and fifthValue != '' ">fifth_value,</if>
            <if test="file != null and file != '' ">file,</if>
            <if test="beginTime != null and beginTime != '' ">begin_time,</if>
            <if test="terminationRemark != null and terminationRemark != '' ">termination_remark,</if>
            <if test="paymentRemark != null and paymentRemark != '' ">payment_remark,</if>
            <if test="lawRemark != null and lawRemark != '' ">law_remark,</if>
            <if test="remark != null and remark != '' ">remark,</if>
            <if test="createTime != null and createTime != '' ">create_time,</if>
            <if test="updateTime != null and updateTime != '' ">update_time,</if>
            <if test="status != null and status != '' ">status,</if>
            <if test="rentId != null and rentId != '' ">rent_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">#{id},</if>
            <if test="contractNumber != null and contractNumber != ''">#{contractNumber},</if>
            <if test="contractName != null and contractName != ''">#{contractName},</if>
            <if test="margin != null and margin != ''">#{margin},</if>
            <if test="firstValue != null and firstValue != ''">#{firstValue},</if>
            <if test="payment != null and payment != ''">#{payment},</if>
            <if test="department != null and department != ''">#{department},</if>
            <if test="agent != null and agent != ''">#{agent},</if>
            <if test="secondValue != null and secondValue != ''">#{secondValue},</if>
            <if test="thirdValue != null and thirdValue != ''">#{thirdValue},</if>
            <if test="forthValue != null and forthValue != ''">#{forthValue},</if>
            <if test="fifthValue != null and fifthValue != ''">#{fifthValue},</if>
            <if test="file != null and file != ''">#{file},</if>
            <if test="beginTime != null and beginTime != ''">#{beginTime},</if>
            <if test="terminationRemark != null and terminationRemark != ''">#{terminationRemark},</if>
            <if test="paymentRemark != null and paymentRemark != ''">#{paymentRemark},</if>
            <if test="lawRemark != null and lawRemark != ''">#{lawRemark},</if>
            <if test="remark != null and remark != ''">#{remark},</if>
            <if test="createTime != null and createTime != ''">#{createTime},</if>
            <if test="updateTime != null and updateTime != ''">#{updateTime},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="rentId != null and rentId != '' ">#{rentId},</if>
        </trim>
    </insert>


    <update id="updateContract" parameterType="contract">
        update sys_contract
        <trim prefix="SET" suffixOverrides=",">
            <if test="id !=null ">id = #{id},</if>
            <if test="contractNumber != null  ">contract_number = #{contractNumber},</if>
            <if test="contractName != null  and contractName != ''  ">contract_name = #{contractName},</if>
            <if test="margin != null  and margin != ''  ">margin = #{margin},</if>
            <if test="firstValue != null  and firstValue != ''  ">first_value = #{firstValue},</if>
            <if test="payment != null  and payment != ''  ">payment = #{payment},</if>
            <if test="department != null  and department != ''  ">department = #{department},</if>
            <if test="agent != null  and agent != ''  ">agent = #{agent},</if>
            <if test="secondValue != null  and secondValue != ''  ">second_value = #{secondValue},</if>
            <if test="thirdValue != null  and thirdValue != ''  ">third_value = #{thirdValue},</if>
            <if test="forthValue != null  and forthValue != ''  ">forth_value = #{forthValue},</if>
            <if test="fifthValue != null  and fifthValue != ''  ">fifth_value = #{fifthValue},</if>
            <if test="file != null  and file != ''  ">file = #{file},</if>
            <if test="beginTime != null  ">begin_time = #{beginTime},</if>
            <if test="status != null  and status != ''  ">status = #{status},</if>
            <if test="createTime != null  ">create_time = #{createTime},</if>
            <if test="updateTime != null  ">update_time = #{updateTime},</if>
            <if test="terminationRemark != null  and terminationRemark != ''  ">termination_remark = #{terminationRemark},</if>
            <if test="paymentRemark != null  and paymentRemark != ''  ">payment_remark = #{paymentRemark},</if>
            <if test="lawRemark != null  and lawRemark != ''  ">law_remark = #{lawRemark},</if>
            <if test="remark != null  and remark != ''  ">remark = #{remark},</if>
            <if test="rentId != null and rentId != '' ">rent_id= #{rentId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteContractById" parameterType="Integer">
        delete from sys_contract where id = #{id}
    </delete>

    <delete id="deleteContractByIds" parameterType="String">
        delete from sys_contract where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>