<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zjnu.newrailway.project.system.mapper.RentAssetMapper">
    
    <resultMap type="RentAsset" id="RentAssetResult">
        <result property="rentId"    column="rent_id"    />
        <result property="assetId"    column="asset_id"    />
    </resultMap>
	
	<sql id="selectRentAssetVo">
        select rent_id, asset_id from sys_rent_asset
    </sql>
	
    <select id="selectRentAssetList" parameterType="RentAsset" resultMap="RentAssetResult">
        <include refid="selectRentAssetVo"/>
        <where>  
            <if test="rentId != null and rentId != ''"> and rent_id = #{rentId}</if>
             <if test="assetId != null and assetId != ''"> and asset_id = #{assetId}</if>
         </where>
    </select>
    
    <select id="selectRentAssetById" parameterType="String" resultMap="RentAssetResult">
        <include refid="selectRentAssetVo"/>
        where rent_id = #{rentId}
    </select>
        
    <insert id="insertRentAsset" parameterType="RentAsset">
        insert into sys_rent_asset
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="rentId != null and rentId != '' ">rent_id,</if>
			<if test="assetId != null and assetId != '' ">asset_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="rentId != null and rentId != ''">#{rentId},</if>
			<if test="assetId != null and assetId != ''">#{assetId},</if>
         </trim>
    </insert>
	 
    <update id="updateRentAsset" parameterType="RentAsset">
        update sys_rent_asset
        <trim prefix="SET" suffixOverrides=",">
            <if test="assetId != null  and assetId != ''  ">asset_id = #{assetId},</if>
        </trim>
        where rent_id = #{rentId}
    </update>

	<delete id="deleteRentAssetById" parameterType="String">
        delete from sys_rent_asset where rent_id = #{rentId}
    </delete>
	
    <delete id="deleteRentAssetByIds" parameterType="String">
        delete from sys_rent_asset where rent_id in 
        <foreach item="rentId" collection="array" open="(" separator="," close=")">
            #{rentId}
        </foreach>
    </delete>

    <select id="countRentAssetById" resultType="Integer">
	    select count(*) from sys_rent_asset where asset_id=#{assetId}
	</select>



    <insert id="batchRentAsset">
        insert into sys_rent_asset(rent_id, asset_id) values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.rentId},#{item.assetId})
        </foreach>
    </insert>
    
</mapper>